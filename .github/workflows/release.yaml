name: Create Release

on:
  workflow_dispatch:

permissions:
  contents: write  # Allows creating releases and uploading assets

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            rid: linux-x64
          - os: windows-latest
            rid: win-x64
          - os: macos-latest
            rid: osx-x64
    outputs:
      FullSemVer: ${{ steps.gitversion.outputs.FullSemVer }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for all branches and tags

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'

    - name: Install GitVersion
      run: dotnet tool install --global GitVersion.Tool

    - name: Determine version
      id: gitversion
      run: echo "::set-output name=FullSemVer::$(dotnet-gitversion /output json /showvariable FullSemVer)"

    - name: Build GithubFeedbackGrabber
      run: dotnet publish ./GithubFeedbackGrabber/GithubFeedbackGrabber.csproj -c Release -r ${{ matrix.rid }} --self-contained -p:PublishAot=true -p:Version=${{ steps.gitversion.outputs.FullSemVer }} -o ./publish/GithubFeedbackGrabber

    - name: Build YouTubeCommentGrabber
      run: dotnet publish ./YouTubeCommentGrabber/YouTubeCommentGrabber.csproj -c Release -r ${{ matrix.rid }} --self-contained -p:PublishAot=true -p:Version=${{ steps.gitversion.outputs.FullSemVer }} -o ./publish/YouTubeCommentGrabber

    - name: Zip GithubFeedbackGrabber Artifact
      run: |
        cd ./publish/GithubFeedbackGrabber
        if [[ "${{ matrix.rid }}" == "win-x64" ]]; then
          zip -r ghdump-${{ matrix.rid }}.zip ghdump.exe
        else
          zip -r ghdump-${{ matrix.rid }}.zip ghdump
        fi

    - name: Zip YouTubeCommentGrabber Artifact
      run: |
        cd ./publish/YouTubeCommentGrabber
        if [[ "${{ matrix.rid }}" == "win-x64" ]]; then
          zip -r ytdump-${{ matrix.rid }}.zip ytdump.exe
        else
          zip -r ytdump-${{ matrix.rid }}.zip ytdump
        fi

    - name: Upload GithubFeedbackGrabber Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ghdump-${{ matrix.rid }}
        path: ./publish/GithubFeedbackGrabber/ghdump-${{ matrix.rid }}.zip

    - name: Upload YouTubeCommentGrabber Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ytdump-${{ matrix.rid }}
        path: ./publish/YouTubeCommentGrabber/ytdump-${{ matrix.rid }}.zip

  create_release:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.build.outputs.FullSemVer }}
        release_name: Release ${{ needs.build.outputs.FullSemVer }}
        draft: false
        prerelease: true

  publish_assets:
    runs-on: ubuntu-latest
    needs: create_release
    strategy:
      matrix:
        rid: [linux-x64, win-x64, osx-x64]
    steps:
    - name: Download GithubFeedbackGrabber Artifact
      uses: actions/download-artifact@v3
      with:
        name: ghdump-${{ matrix.rid }}
        path: ./publish/GithubFeedbackGrabber

    - name: Download YouTubeCommentGrabber Artifact
      uses: actions/download-artifact@v3
      with:
        name: ytdump-${{ matrix.rid }}
        path: ./publish/YouTubeCommentGrabber

    - name: Upload GithubFeedbackGrabber Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./publish/GithubFeedbackGrabber/ghdump-${{ matrix.rid }}.zip
        asset_name: ghdump-${{ matrix.rid }}.zip
        asset_content_type: application/zip

    - name: Upload YouTubeCommentGrabber Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./publish/YouTubeCommentGrabber/ytdump-${{ matrix.rid }}.zip
        asset_name: ytdump-${{ matrix.rid }}.zip
        asset_content_type: application/zip