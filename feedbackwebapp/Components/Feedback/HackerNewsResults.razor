@namespace FeedbackWebApp.Components.Feedback
@using FeedbackWebApp.Components.Feedback.Services
@using SharedDump.Models.HackerNews

@if (Analyses?.Any() == true)
{
    @foreach (var (analysis, index) in Analyses.Select((a, i) => (a, i)))
    {
        var story = analysis.Stories.FirstOrDefault();
        if (story == null) continue;

        <div class="card mt-4 shadow-sm">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-newspaper text-warning me-2"></i>
                        Article @(index + 1): @story.Title
                    </h5>
                    <div>
                        @if (!string.IsNullOrEmpty(story.Url))
                        {
                            <a href="@story.Url" target="_blank" class="btn btn-sm btn-outline-light me-2">
                                <i class="bi bi-box-arrow-up-right"></i> View Article
                            </a>
                        }
                        <button class="btn btn-sm btn-outline-light" @onclick="() => ToggleComments(story.Id)">
                            <i class="bi bi-chat-text me-1"></i>
                            @(ExpandedArticles.Contains(story.Id) ? "Hide Comments" : $"Show Comments ({analysis.Stories.Count - 1})")
                        </button>
                    </div>
                </div>
            </div>
            <div class="card-body">
              
                @if (ExpandedArticles.Contains(story.Id))
                {
                    <div class="comments-container mt-4">
                        <h6 class="mb-3">Comments (@(analysis.Stories.Count - 1))</h6>
                        @foreach (var comment in analysis.Stories.Skip(1))
                        {
                            <div class="comment-item p-3 mb-2 rounded">
                                <div class="d-flex justify-content-between">
                                    <strong>@comment.By</strong>
                                    <small>@DateTimeOffset.FromUnixTimeSeconds(comment.Time).ToString("MMM dd, yyyy")</small>
                                </div>
                                <div class="mt-2">@((MarkupString)(comment?.Text ?? ""))</div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    }
}

@code {
    [Parameter]
    public List<HackerNewsAnalysis>? Analyses { get; set; }

    private HashSet<int> ExpandedArticles { get; } = new();

    private void ToggleComments(int itemId)
    {
        if (ExpandedArticles.Contains(itemId))
        {
            ExpandedArticles.Remove(itemId);
        }
        else
        {
            ExpandedArticles.Add(itemId);
        }
    }
}