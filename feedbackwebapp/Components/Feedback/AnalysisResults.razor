@namespace FeedbackWebApp.Components.Feedback
@using Markdig
@inject IJSRuntime JSRuntime

@if (!string.IsNullOrEmpty(Error))
{
    <div class="alert alert-danger mt-4" role="alert">
        <i class="bi bi-exclamation-triangle-fill me-2"></i>
        @Error
    </div>
}

@if (!string.IsNullOrEmpty(MarkdownResult))
{
    <div class="card mt-4 shadow-sm">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h5 class="card-title mb-0">Analysis Summary</h5>
            <button class="btn btn-sm btn-light" @onclick="CopyToClipboard">
                <i class="bi bi-clipboard me-1"></i>
                Copy
            </button>
        </div>
        <div class="card-body">
            <div class="markdown-body">
                @((MarkupString)Markdown.ToHtml(MarkdownResult))
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public string Error { get; set; } = "";

    [Parameter]
    public string MarkdownResult { get; set; } = "";

    private async Task CopyToClipboard()
    {
        await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", MarkdownResult);
    }
}