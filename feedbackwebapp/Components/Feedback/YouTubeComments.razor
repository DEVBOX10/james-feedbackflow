@namespace FeedbackWebApp.Components.Feedback
@using SharedDump.Models.YouTube

@if (Videos != null)
{
    foreach (var video in Videos)
    {
        <div class="card mt-4 shadow-sm">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-youtube text-danger me-2"></i>
                        @video.Title
                    </h5>
                    <button class="btn btn-sm btn-outline-primary" @onclick="@(() => ToggleComments(video.Id))">
                        @(ExpandedVideos.Contains(video.Id) ? "Hide Comments" : "Show Comments")
                    </button>
                </div>
            </div>
            @if (ExpandedVideos.Contains(video.Id))
            {
                <div class="card-body">
                    <div class="list-group">
                        @foreach (var comment in video.Comments)
                        {
                            <div class="list-group-item">
                                <div class="comment-header d-flex justify-content-between align-items-center mb-2">
                                    <div class="d-flex align-items-center">
                                        <strong>@comment.Author</strong>
                                    </div>
                                    <small class="secondary-text">@comment.PublishedAt.ToLocalTime().ToString("g")</small>
                                </div>
                                <p class="mb-1">@comment.Text</p>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    }
}

@code {

    [Parameter]
    public List<YouTubeOutputVideo>? Videos { get; set; }

    private HashSet<string> ExpandedVideos { get; set; } = new();

    private void ToggleComments(string videoId)
    {
        if (ExpandedVideos.Contains(videoId))
            ExpandedVideos.Remove(videoId);
        else
            ExpandedVideos.Add(videoId);
    }
}