@namespace FeedbackWebApp.Components.Feedback
@using SharedDump.Models.Reddit

@if (Threads?.Any() == true)
{
    foreach (var thread in Threads)
    {
        <div class="card mt-4 shadow-sm">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-reddit text-danger me-2"></i>
                        @thread.Title
                    </h5>
                    <a href="@thread.Url" target="_blank" class="btn btn-sm btn-link text-decoration-none">
                        <i class="bi bi-box-arrow-up-right"></i> View on Reddit
                    </a>
                </div>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <div>
                            <span class="secondary-text">Posted by u/@thread.Author</span>
                            <span class="secondary-text">Score: @thread.Score</span>
                        </div>
                    </div>
                    <div class="mt-2">@thread.SelfText</div>
                </div>

                @if (thread.Comments?.Any() == true)
                {
                    <div>
                        <button class="btn btn-sm btn-outline-secondary mb-3" @onclick="() => ToggleComments(thread.Id)">
                            @(ExpandedThreads.Contains(thread.Id) ? "Hide Comments" : $"Show Comments ({thread.Comments?.Count})")
                        </button>

                        @if (ExpandedThreads.Contains(thread.Id))
                        {
                            <div class="comments-container">
                                @foreach (var comment in thread.Comments)
                                {
                                    <RedditComment Comment="comment" />
                                }
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    }
}

@code {
    [Parameter]
    public List<RedditThreadModel>? Threads { get; set; }

    private HashSet<string> ExpandedThreads { get; } = new();

    private void ToggleComments(string threadId)
    {
        if (ExpandedThreads.Contains(threadId))
        {
            ExpandedThreads.Remove(threadId);
        }
        else
        {
            ExpandedThreads.Add(threadId);
        }
    }
}