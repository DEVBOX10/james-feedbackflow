@namespace FeedbackWebApp.Components.ContentFeed.Results
@using SharedDump.Models.Reddit

@if (Threads?.Any() == true)
{
    <div class="reddit-results">
        @foreach (var thread in Threads)
        {
            <div class="card mb-3">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-start">
                        <h5 class="card-title mb-1">
                            <i class="bi bi-reddit text-danger me-2"></i>
                            @thread.Title
                        </h5>
                        <a href="@thread.Url" target="_blank" class="btn btn-sm btn-outline-light">
                            <i class="bi bi-box-arrow-up-right"></i>
                        </a>
                    </div>
                    
                    <div class="thread-meta mt-2">
                        <small class="text-muted">
                            Posted by u/@thread.Author | Score: @thread.Score
                        </small>
                    </div>

                    @if (!string.IsNullOrWhiteSpace(thread.SelfText))
                    {
                        <div class="thread-content mt-3">@thread.SelfText</div>
                    }
                    
                    @if (thread.Comments?.Any() == true)
                    {
                        <div class="mt-3">
                            <button class="btn btn-sm btn-outline-light" @onclick="() => ToggleComments(thread.Id)">
                                @(ExpandedThreads.Contains(thread.Id) ? "Hide" : "Show") Comments (@thread.Comments.Count)
                            </button>

                            @if (ExpandedThreads.Contains(thread.Id))
                            {
                                <div class="comments-container mt-3">
                                    @foreach (var comment in thread.Comments)
                                    {
                                        <FeedbackWebApp.Components.ContentFeed.Results.RedditComment Comment="comment" />
                                    }
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        }
    </div>
}

@code {
    [Parameter]
    public List<RedditThreadModel>? Threads { get; set; }

    private HashSet<string> ExpandedThreads { get; } = new();

    private void ToggleComments(string threadId)
    {
        if (ExpandedThreads.Contains(threadId))
            ExpandedThreads.Remove(threadId);
        else
            ExpandedThreads.Add(threadId);
    }
}