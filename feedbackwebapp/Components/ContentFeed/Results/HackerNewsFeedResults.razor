@namespace FeedbackWebApp.Components.ContentFeed.Results
@using SharedDump.Models.HackerNews

@if (Items?.Any() == true)
{
    <div class="hackernews-results">
        @foreach (var item in Items)
        {
            <div class="card mb-3">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-start">
                        <h5 class="card-title mb-1">
                            <i class="bi bi-newspaper text-warning me-2"></i>
                            @item.Title
                        </h5>
                        @if (!string.IsNullOrEmpty(item.Url))
                        {
                            <a href="@item.Url" target="_blank" class="btn btn-sm btn-outline-light">
                                <i class="bi bi-box-arrow-up-right"></i>
                            </a>
                        }
                    </div>
                    
                    <div class="item-meta mt-2">
                        <small class="text-muted">
                            By @item.By | Score: @item.Score | @DateTimeOffset.FromUnixTimeSeconds(item.Time).ToLocalTime().ToString("g")
                        </small>
                    </div>

                    @if (!string.IsNullOrEmpty(item.Text))
                    {
                        <div class="item-content mt-3">@((MarkupString)item.Text)</div>
                    }
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="text-center text-muted">
        <p>No articles found.</p>
    </div>
}

@code {
    [Parameter, EditorRequired]
    public List<HackerNewsItem>? Items { get; set; }
}