@using Microsoft.JSInterop
@namespace FeedbackWebApp.Components.ContentFeed.Forms
@inject IJSRuntime JSRuntime

<div class="youtube-feed-form">
    <div class="form-floating mb-3">
        <input type="text" class="form-control" id="topic" placeholder="Topic" 
               @bind="Topic" @bind:event="oninput" />
        <label for="topic">Topic</label>
        <div class="form-text">Enter a topic to search for in video titles and descriptions</div>
    </div>

    <div class="form-floating mb-3">
        <input type="text" class="form-control" id="tag" placeholder="Tag" 
               @bind="Tag" @bind:event="oninput" />
        <label for="tag">Tag (optional)</label>
        <div class="form-text">Enter a tag to filter videos</div>
    </div>

    <div class="form-floating mb-3">
        <input type="number" class="form-control" id="days" min="1" max="30" 
               @bind="Days" @bind:event="oninput" />
        <label for="days">Days</label>
        <div class="form-text">Number of days to look back (1-30)</div>
    </div>
</div>

@code {
    private const string StorageKey = "YouTubeFeedFormState";

    [Parameter]
    public string Topic { get; set; } = "";

    [Parameter]
    public string? Tag { get; set; }

    [Parameter]
    public int Days { get; set; } = 7;

    protected override async Task OnInitializedAsync()
    {
        await LoadFromLocalStorageAsync();
    }

    public async Task SaveToLocalStorageAsync()
    {
        var state = new
        {
            Topic,
            Tag,
            Days
        };
        await JSRuntime.InvokeVoidAsync("localStorage.setItem", StorageKey, 
            System.Text.Json.JsonSerializer.Serialize(state));
    }

    private async Task LoadFromLocalStorageAsync()
    {
        var savedValue = await JSRuntime.InvokeAsync<string>("localStorage.getItem", StorageKey);
        if (!string.IsNullOrEmpty(savedValue))
        {
            try
            {
                var state = System.Text.Json.JsonSerializer.Deserialize<dynamic>(savedValue);
                Topic = state?.GetProperty("Topic").GetString() ?? "";
                Tag = state?.GetProperty("Tag").GetString();
                Days = state?.GetProperty("Days").GetInt32();
            }
            catch
            {
                // If there's any error reading the stored value, we'll keep the defaults
            }
        }
    }
}